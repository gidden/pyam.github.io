

.. _sphx_glr_source_examples_plot_stack.py:


=========================
Plot Data as a Stack Plot
=========================




.. code-block:: python

    # sphinx_gallery_thumbnail_number = 2
    import matplotlib.pyplot as plt
    import pyam







Read in some example data



.. code-block:: python


    fname = 'msg_input.csv'
    df = pyam.IamDataFrame(fname, encoding='ISO-8859-1')
    print(df.head())





.. rst-class:: sphx-glr-script-out

 Out::

    model          scenario region                 variable unit  \
    0     MESSAGE-GLOBIOM  SSP2-45-SPA2-V25    AFR  AIRCRAFT_CO2_growthrate    %   
    875   MESSAGE-GLOBIOM  SSP2-45-SPA2-V25    CPA  AIRCRAFT_CO2_growthrate    %   
    1750  MESSAGE-GLOBIOM  SSP2-45-SPA2-V25    EEU  AIRCRAFT_CO2_growthrate    %   
    2625  MESSAGE-GLOBIOM  SSP2-45-SPA2-V25    FSU  AIRCRAFT_CO2_growthrate    %   
    3500  MESSAGE-GLOBIOM  SSP2-45-SPA2-V25    LAM  AIRCRAFT_CO2_growthrate    %   

          year    value  
    0     2005  1.00000  
    875   2005  1.00000  
    1750  2005  0.99818  
    2625  2005  1.00000  
    3500  2005  0.95709


We generated a simple stacked stack chart as below



.. code-block:: python


    data = df.filter({'variable': 'Emissions|CO2|*',
                      'level': 0,
                      'region': 'World'})
    data.interpolate(2015)  # some values are missing

    fig, ax = plt.subplots(figsize=(10, 10))
    data.stack_plot(ax=ax)
    fig.subplots_adjust(right=0.55)
    plt.show()




.. image:: /source/examples/images/sphx_glr_plot_stack_001.png
    :align: center




We don't just have to plot variables, any data or metadata associated with the
IamDataFrame can be used.



.. code-block:: python


    data = (df
            .filter({'variable': 'Emissions|CO2'})
            .filter({'region': 'World'}, keep=False)
            )
    fig, ax = plt.subplots(figsize=(10, 10))
    data.stack_plot(ax=ax, stack='region', cmap='tab20')
    plt.show()



.. image:: /source/examples/images/sphx_glr_plot_stack_002.png
    :align: center




**Total running time of the script:** ( 0 minutes  0.695 seconds)



.. only :: html

 .. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_stack.py <plot_stack.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_stack.ipynb <plot_stack.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
